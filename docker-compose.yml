version: "3"
services:
  graphql-engine:
    image: nhost/graphql-engine:${HASURA_VERSION}
    restart: always
    ports:
      - "${YOUR_DOCKER_IP}:${YOUR_HASURA_PORT}:${HASURA_GRAPHQL_SERVER_PORT}"
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://${PG_USER}:${PG_PASSWORD}@${PG_ADDRESS}:${PG_PORT}/${DB_NAME}
      - HASURA_GRAPHQL_JWT_SECRET=${HASURA_GRAPHQL_JWT_SECRET}
      - HASURA_GRAPHQL_ADMIN_SECRET=${ADMIN_PASSWORD}
      - HASURA_GRAPHQL_UNAUTHORIZED_ROLE=${HASURA_GRAPHQL_UNAUTHORIZED_ROLE}
      - HASURA_GRAPHQL_ENABLE_CONSOLE=${HASURA_GRAPHQL_ENABLE_CONSOLE}
    volumes:
      - ${HASURA_METADATA}:/hasura-metadata
      - ${HASURA_MIGRATIONS}:/hasura-migrations

  hasura-auth:
    image: nhost/hasura-auth:${HASURA_AUTH_VERSION}
    depends_on:
      - "graphql-engine"
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://${PG_USER}:${PG_PASSWORD}@${PG_ADDRESS}:${PG_PORT}/${DB_NAME}
      - HASURA_GRAPHQL_GRAPHQL_URL=https://${HASURA_URL}/v1/graphql
      - HASURA_GRAPHQL_JWT_SECRET=${HASURA_GRAPHQL_JWT_SECRET}
      - HASURA_GRAPHQL_ADMIN_SECRET=${ADMIN_PASSWORD}
      - AUTH_SERVER_URL=https://${AUTH_URL}/v1
      - AUTH_CLIENT_URL=https://${CLIENT_URL}
      - AUTH_ACCESS_CONTROL_ALLOWED_REDIRECT_URLS=${AUTH_ACCESS_CONTROL_ALLOWED_REDIRECT_URLS}
      - AUTH_SMTP_HOST=${AUTH_SMTP_HOST}
      - AUTH_SMTP_AUTH_METHOD=${AUTH_SMTP_AUTH_METHOD}
      - AUTH_SMTP_PORT=${AUTH_SMTP_PORT}
      - AUTH_SMTP_USER=${AUTH_SMTP_USER}
      - AUTH_SMTP_PASS=${AUTH_SMTP_PASS}
      - AUTH_SMTP_SENDER=${AUTH_SMTP_SENDER}
      - AUTH_SMTP_SECURE=${AUTH_SMTP_SECURE}
      - AUTH_LOG_LEVEL=${AUTH_LOG_LEVEL}
      - AUTH_USER_DEFAULT_ALLOWED_ROLES=${AUTH_USER_DEFAULT_ALLOWED_ROLES}
      - AUTH_USER_DEFAULT_ROLE=${AUTH_USER_DEFAULT_ROLE}
      - AUTH_LOCALE_ALLOWED_LOCALES=${AUTH_LOCALE_ALLOWED_LOCALES}
      - AUTH_LOCALE_DEFAULT=${AUTH_LOCALE_DEFAULT}
      - AUTH_EMAIL_SIGNIN_EMAIL_VERIFIED_REQUIRED=${AUTH_EMAIL_SIGNIN_EMAIL_VERIFIED_REQUIRED}
      - AUTH_PROVIDER_AZUREAD_ENABLED=${AUTH_PROVIDER_AZUREAD_ENABLED}
      - AUTH_PROVIDER_AZUREAD_CLIENT_ID=${AUTH_PROVIDER_AZUREAD_CLIENT_ID}
      - AUTH_PROVIDER_AZUREAD_CLIENT_SECRET=${AUTH_PROVIDER_AZUREAD_CLIENT_SECRET}
      - AUTH_PROVIDER_AZUREAD_TENANT=${AUTH_PROVIDER_AZUREAD_TENANT}
      - AUTH_PROVIDER_GOOGLE_ENABLED=${AUTH_PROVIDER_GOOGLE_ENABLED}
      - AUTH_PROVIDER_GOOGLE_CLIENT_ID=${AUTH_PROVIDER_GOOGLE_CLIENT_ID}
      - AUTH_PROVIDER_GOOGLE_CLIENT_SECRET=${AUTH_PROVIDER_GOOGLE_CLIENT_SECRET}
    ports:
      - "${YOUR_DOCKER_IP}:${YOUR_AUTH_PORT}:${AUTH_PORT}"
    volumes:
      - ${AUTH_EMAIL_TEMPLATE}:/app/email-templates
    restart: always
  functions:
    image: nhost/functions:1.0.0
    environment:
      - HASURA_GRAPHQL_DATABASE_URL=postgres://${PG_USER}:${PG_PASSWORD}@${PG_ADDRESS}:${PG_PORT}/${DB_NAME}
      - HASURA_GRAPHQL_GRAPHQL_URL=https://${HASURA_URL}/v1/graphql
      - HASURA_GRAPHQL_JWT_SECRET=${HASURA_GRAPHQL_JWT_SECRET}
      - HASURA_GRAPHQL_ADMIN_SECRET=${ADMIN_PASSWORD}
      - MS_TENANT_ID=${MS_TENANT_ID}
      - MS_CLIENT_ID=${MS_CLIENT_ID}
      - MS_CLIENT_SECRET=${MS_CLIENT_SECRET}
      - FUNCTIONS_API_KEY=${FUNCTIONS_API_KEY}
    restart: always
    ports:
      - "${YOUR_DOCKER_IP}:${YOUR_FUNC_PORT}:${FUNC_PORT}"
    volumes:
      -  .:/opt/project
      - project_node_modules:/opt/project/node_modules
      - functions_node_modules:/opt/project/functions/node_modules
  storage:
    image: nhost/hasura-storage:${HASURA_STORAGE_VERSION}
    depends_on:
      - graphql-engine
    restart: always
    ports:
      - "${YOUR_DOCKER_IP}:${YOUR_STORAGE_PORT}:${STORAGE_PORT}"
    environment:
      - HASURA_METADATA=1
      - HASURA_ENDPOINT=https://${HASURA_URL}/v1
      - HASURA_GRAPHQL_ADMIN_SECRET=${ADMIN_PASSWORD}
      - S3_ACCESS_KEY=${STORAGE_ACCESS_KEY}
      - S3_SECRET_KEY=${STORAGE_SECRET_KEY}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
      - POSTGRES_MIGRATIONS=1
      - POSTGRES_MIGRATIONS_SOURCE=postgres://${PG_USER}:${PG_PASSWORD}@${PG_ADDRESS}:${PG_PORT}/${DB_NAME}?sslmode=disable
      - PUBLIC_URL=https://${STORAGE_URL}
    command:
      - serve
volumes:
  project_node_modules:
  functions_node_modules:
